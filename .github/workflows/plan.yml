name: terraform-plan
on: 
  pull_request:
    paths:
      - '*.tf'
      - '**/*.tf'
permissions:
  pull-requests: write
  id-token: write
  contents: read
jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::169421194568:role/githubOIDCAssumeRole
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v3
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
      
      - uses: actions/github-script@v6
        if: always() && github.event_name == 'pull_request'
        continue-on-error: true # if writing fails for some reason, don't mark as failure
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
      
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
      
            </details>
      
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            }) 